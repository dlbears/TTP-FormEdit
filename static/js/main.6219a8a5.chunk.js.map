{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["FormEdit","props","state","editing","editFirstName","editLastName","firstName","lastName","handleCancel","bind","handleEdit","handleSubmit","handleText","e","key","target","name","value","this","setState","preventDefault","onSubmit","type","onChange","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,GCJS,I,wDDKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,cAAe,GACfC,aAAc,GACdC,UAAW,GACXC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAbD,E,uDAgBRI,GACT,IAAMC,EAAMD,EAAEE,OAAOC,KACfC,EAAQJ,EAAEE,OAAOE,MACvBC,KAAKC,SAAL,eACGL,EAAMG,M,mCAIEJ,GACXA,EAAEO,iBACFF,KAAKC,SAAS,CACZhB,SAAS,EACTG,UAAWY,KAAKhB,MAAME,cACtBG,SAAUW,KAAKhB,MAAMG,iB,mCAKvBa,KAAKC,SAAS,CACZhB,SAAS,EACTC,cAAec,KAAKhB,MAAMI,UAC1BD,aAAca,KAAKhB,MAAMK,a,qCAK3BW,KAAKC,SAAS,CAAEhB,SAAS,M,+BAKzB,OAAOe,KAAKhB,MAAMC,QAChB,uBAAMkB,SAAUH,KAAKP,aAArB,UACE,gDAEE,uBAAOW,KAAK,OAAON,KAAK,gBAAgBC,MAAOC,KAAKhB,MAAME,cAAemB,SAAUL,KAAKN,gBAE1F,uBACA,+CAEE,uBAAOU,KAAK,OAAON,KAAK,eAAeC,MAAOC,KAAKhB,MAAMG,aAAckB,SAAUL,KAAKN,gBAExF,uBACA,uBAAOU,KAAK,SAASL,MAAM,SAC3B,uBAAOK,KAAK,SAASL,MAAM,SAASO,QAASN,KAAKV,kBAIpD,gCACA,+CACeU,KAAKhB,MAAMI,aAE1B,8CACcY,KAAKhB,MAAMK,YAEzB,wBAAQiB,QAASN,KAAKR,WAAtB,yB,GAxEiBe,cAqFRC,MANf,WACE,OACC,cAAC,EAAD,KEzEYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6219a8a5.chunk.js","sourcesContent":["import {Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n \nclass FormEdit extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editing: false,\n      editFirstName: '',\n      editLastName: '',\n      firstName: '',\n      lastName: ''\n    }\n\n    this.handleCancel = this.handleCancel.bind(this) \n    this.handleEdit = this.handleEdit.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleText = this.handleText.bind(this)\n  }\n\n  handleText(e) {\n    const key = e.target.name,\n          value = e.target.value\n    this.setState({\n      [key]: value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    this.setState({\n      editing: false,\n      firstName: this.state.editFirstName,\n      lastName: this.state.editLastName\n    })\n  }\n\n  handleEdit() {\n    this.setState({ \n      editing: true, \n      editFirstName: this.state.firstName, \n      editLastName: this.state.lastName \n    })\n  }\n\n  handleCancel() {\n    this.setState({ editing: false })\n  }\n\n\n  render () {\n    return this.state.editing ? (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          First Name: \n          <input type=\"text\" name=\"editFirstName\" value={this.state.editFirstName} onChange={this.handleText} />\n        </label>\n        <br/>\n        <label>\n          Last Name: \n          <input type=\"text\" name=\"editLastName\" value={this.state.editLastName} onChange={this.handleText} />\n        </label>\n        <br/>\n        <input type=\"submit\" value=\"Save\" />\n        <input type=\"button\" value=\"Cancel\" onClick={this.handleCancel} />\n\n      </form>\n    ) : (\n      <div>\n      <div>\n        First Name: {this.state.firstName}\n      </div>\n      <div>\n        Last Name: {this.state.lastName}\n      </div>\n      <button onClick={this.handleEdit}>Edit</button>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n   <FormEdit />\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}